@model Account
@{
    ViewData["Title"] = "Transfer";
}
@{
    await Html.RenderPartialAsync("_HeadNavBar");
}
<h1 class="display-4">Transfer _____ @Model.AccountNumber (@Model.AccountType)</h1>
<h1 class="display-4">Balance:   @Model.Balance.ToString("0.00")$</h1>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Transfer">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label for="DestAccountNumber" class="control-label">To Account :</label>
                <input id="DestAccountNumber" name="DestAccountNumber" class="form-control"
                       data-val="true" data-val-required="The DestAccountNumber is required."
                       data-val-number="Account number must be a number." />
                       @Html.ValidationMessage("DestAccountNumber", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label for="Amount" class="control-label">Amount :</label>
                <input id="Amount" name="Amount" class="form-control"
                       data-val="true" data-val-number="Amount must be a number."
                       data-val-required="The Amount field is required." />
                       @Html.ValidationMessage("Amount", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label for="Comment" class="control-label">Comment(Optional) :</label>
                <input id="Comment" name="Comment" class="form-control" />
            </div>
            <div class="form-group">
                <input type="submit" value="Transfer" class="btn btn-primary" />
            </div>
                @Html.ValidationMessage("FailedTransfer", new { @class = "text-danger" })
        </form>
    </div>
</div>
<div>
    <a asp-action="ViewAccount">Back to Accounts</a>
</div>
@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
